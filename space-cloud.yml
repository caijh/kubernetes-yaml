---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: space-cloud-gateway
  namespace: space-cloud
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: space-cloud-gateway
  namespace: space-cloud
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: space-cloud-gateway
  namespace: space-cloud
subjects:
  - kind: ServiceAccount
    name: space-cloud-gateway # Name is case sensitive
    namespace: space-cloud
roleRef:
  kind: ClusterRole
  name: space-cloud-gateway
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: space-cloud
  labels:
    app: gateway
    service: gateway
spec:
  type: NodePort
  ports:
    - targetPort: 4122
      port: 4122
      nodePort: 30122
      name: http
    - targetPort: 4126
      port: 4126
      nodePort: 30126
      name: https
  selector:
    app: gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: space-cloud
  labels:
    app: gateway
spec:
  selector:
    matchLabels:
      app: gateway
  replicas: 1
  template:
    metadata:
      labels:
        app: gateway
        clusterId: first-cluster
    spec:
      serviceAccountName: space-cloud-gateway
      containers:
        - name: gateway
          command: [ "./app", "run" ]
          image: 172.25.10.70:1000/library/caiunhui/spaceuptech/gateway:0.21.0
          imagePullPolicy: IfNotPresent # IfNotPresent | Always
          livenessProbe:
            exec:
              command:
                - ./app
                - health-check
                - -timeout=5
            initialDelaySeconds: 100
            periodSeconds: 10
          env:
            - name: "NODE_ID"
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            # - name: "RUNNER_ADDR"
            #   value: "runner.space-cloud.svc.cluster.local:4050"
            - name: "GOOGLE_APPLICATION_CREDENTIALS"
              value: "/root/.gcp/credentials.json"
            - name: "ADMIN_USER"
              value: "admin"
            - name: "ADMIN_PASS"
              value: "1234"
            - name: "ADMIN_SECRET"
              value: "some-secret"
            - name: "LOG_LEVEL"
              value: "debug"
            - name: "LOG_FORMAT"
              value: "json"
            - name: "STORE_TYPE"
              value: "kube"
            - name: "LETSENCRYPT_STORE"
              value: "kube"
            - name: "DEV"
              value: "true" # Turn this to false for production mode
            - name: "SSL_ENABLE"
              value: "true"
            - name: "CLUSTER_ID"
              value: "first-cluster"
            - name: "REDIS_CONN"
              value: "redis.caijh-test.svc.cluster.local:6379"
          ports:
            - containerPort: 4122
            - containerPort: 4126
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
      terminationGracePeriodSeconds: 300
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: gateway
  namespace: space-cloud
  labels:
    app: gateway
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gateway
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dbevents
  namespace: space-cloud
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dbevents
  namespace: space-cloud
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dbevents
  namespace: space-cloud
subjects:
  - kind: ServiceAccount
    name: dbevents # Name is case sensitive
    namespace: space-cloud
roleRef:
  kind: ClusterRole
  name: dbevents
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dbevents
  name: dbevents
  namespace: space-cloud
spec:
  selector:
    matchLabels:
      app: dbevents
  replicas: 1
  template:
    metadata:
      labels:
        app: dbevents
    spec:
      serviceAccountName: dbevents
      containers:
        - name: dbevents
          image: "172.25.10.70:1000/library/caiunhui/spaceuptech/dbevents:0.2.0"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: "SC_ADMIN_SECRET"
              value: "some-secret"
            - name: "GATEWAY_URL"
              value: "gateway.space-cloud.svc.cluster.local:4122"
            - name: "STORAGE_TYPE"
              value: "k8s"
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
      terminationGracePeriodSeconds: 300
